{"version":3,"file":"static/js/415.534cd8e8.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oCACkBC,IAFV,uBACvBG,EADuB,EACvBA,KADuB,kBAMxBA,EAAKC,QAAQC,KAAI,YACtB,MAAO,CAAEC,GADgC,EAAhBA,GACZC,MAD4B,EAAZA,MAE9B,KAR8B,2CAAH,qDAWjBC,EAAY,mCAAG,WAAMF,GAAN,yFACHJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BO,EAA9B,oBAA4CN,IADzC,uBAClBG,EADkB,EAClBA,KACRM,QAAQC,IAAIP,GAFc,kBAInBA,GAJmB,2CAAH,sDAOZQ,EAAS,mCAAG,WAAMC,GAAN,yFACAV,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BY,IAF/B,uBACfT,EADe,EACfA,KAGRM,QAAQC,IAAIP,EAAKC,SAJM,kBAKhBD,EAAKC,QAAQC,KAAI,YACtB,MAAO,CAAEC,GADgC,EAAhBA,GACZC,MAD4B,EAAZA,MAE9B,KAPsB,2CAAH,sDAUTM,EAAW,mCAAG,WAAMP,GAAN,yFACFJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BACqBN,IAFnB,uBACjBG,EADiB,EACjBA,KADiB,kBAMlBA,EAAKW,KAAKT,KAAI,YACnB,MAAO,CAAEC,GADqD,EAAxCA,GACTS,aADiD,EAApCA,aACCC,KADmC,EAAtBA,KACPC,UAD6B,EAAhBA,UAE/C,KARwB,2CAAH,sDAWXC,EAAc,mCAAG,WAAMZ,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BACqBN,IAFhB,uBACpBG,EADoB,EACpBA,KADoB,kBAMrBA,EAAKC,QAAQC,KAAI,YACtB,MAAO,CAAEC,GAD0C,EAA1BA,GACZa,OADsC,EAAtBA,OACRC,QAD8B,EAAdA,QAEtC,KAR2B,2CAAH,qD,sDC1C3B,MAAuB,qBAAvB,EAAsD,wB,SCCzCC,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,KAGrB,C,2ECPD,EAAuB,yBAAvB,EAAuD,yB,SCI1CC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,eAAIL,UAAWC,EAAf,SACGE,EAAOpB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CACEe,UAAWC,EACXK,GAAE,kBAAatB,GACfuB,MAAO,CAAEC,KAAMJ,GAHjB,SAKGnB,KANID,EAUZ,KAGN,C,kHCSD,UA7Ba,WACX,OAA4ByB,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAqBH,EAAAA,EAAAA,UAAS,MAArBI,GAAT,eAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBH,GAAa,GAFI,UAGEjC,EAAAA,EAAAA,MAHF,OAGXE,EAHW,OAIjB6B,EAAU7B,GAJO,gDAMjBgC,EAAS,QANQ,yBAQjBD,GAAa,GARI,4EAAH,qDAWlBG,GACD,GAAE,KAGD,4BACE,4CACA,SAAC,IAAD,CAAYZ,OAAQA,IACnBQ,IAAa,SAAC,IAAD,MAGnB,C","sources":["api/movies-service.js","webpack://goit-react-hw-05-movies/./src/components/loader/Loader.module.css?198e","components/loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/moviesList/moviesList.module.css?3404","components/moviesList/moviesList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7b9bc8a9cecedcc4e50de44b7a3d7df5';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  // console.log(data);\n\n  return data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  console.log(data);\n\n  return data;\n};\n\nexport const getByName = async querySearchForm => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${querySearchForm}`\n  );\n  console.log(data.results);\n  return data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getCastInfo = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  // console.log(data.cast);\n\n  return data.cast.map(({ id, profile_path, name, character }) => {\n    return { id, profile_path, name, character };\n  });\n};\n\nexport const getReviewsInfo = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  // console.log(data.results);\n\n  return data.results.map(({ id, author, content }) => {\n    return { id, author, content };\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Loader_wrap__WJ0KW\",\"spinner\":\"Loader_spinner__DydzZ\",\"loader\":\"Loader_loader__Iv4Mh\"};","import css from 'components/loader/Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.wrap}>\n      <div className={css.spinner}></div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"moviesList_list__LSjyx\",\"link\":\"moviesList_link__zj7RC\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from 'components/moviesList/moviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  // console.log(location.state);\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link\n              className={css.link}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/moviesList/moviesList';\nimport { Loader } from 'components/loader/Loader';\n\nimport { getTrendingMovies } from 'api/movies-service';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    const asyncWrapper = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        setError('Oops');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","data","results","map","id","title","getMovieInfo","console","log","getByName","querySearchForm","getCastInfo","cast","profile_path","name","character","getReviewsInfo","author","content","Loader","className","css","MoviesList","movies","location","useLocation","to","state","from","useState","setMovies","isLoading","setIsLoading","setError","useEffect","asyncWrapper"],"sourceRoot":""}