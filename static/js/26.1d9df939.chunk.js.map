{"version":3,"file":"static/js/26.1d9df939.chunk.js","mappings":"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","sources":["api/movies-service.js","webpack://goit-react-hw-05-movies/./src/components/loader/Loader.module.css?198e","components/loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/moviesList/moviesList.module.css?3404","components/moviesList/moviesList.jsx","components/searchForm/searchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7b9bc8a9cecedcc4e50de44b7a3d7df5';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  // console.log(data);\n\n  return data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    data;\n\n  return { poster_path, title, release_date, vote_average, overview, genres };\n};\n\nexport const getByName = async querySearchForm => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${querySearchForm}`\n  );\n  console.log(data.results);\n  return data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getCastInfo = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  // console.log(data.cast);\n\n  return data.cast.map(({ id, profile_path, name, character }) => {\n    return { id, profile_path, name, character };\n  });\n};\n\nexport const getReviewsInfo = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  // console.log(data.results);\n\n  return data.results.map(({ id, author, content }) => {\n    return { id, author, content };\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Loader_wrap__WJ0KW\",\"spinner\":\"Loader_spinner__DydzZ\",\"loader\":\"Loader_loader__Iv4Mh\"};","import css from 'components/loader/Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.wrap}>\n      <div className={css.spinner}></div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"moviesList_list__LSjyx\",\"link\":\"moviesList_link__zj7RC\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from 'components/moviesList/moviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  // console.log(location.state);\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link\n              className={css.link}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\n\nexport const SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n\n  const handleSubmit = e => {\n    e.prevenDefault();\n    const search = e.target.query.value.toLowerCase().trim();\n    if (!search) return;\n    setSearchParams({ search });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" autoComplete=\"off\" autoFocus name=\"query\" />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getByName } from 'api/movies-service';\n\nimport { SearchForm } from 'components/searchForm/searchForm';\nimport { MoviesList } from 'components/moviesList/moviesList';\nimport { Loader } from 'components/loader/Loader';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n\n  console.log(searchParams.get('query'));\n  const querySearchForm = searchParams.get('query');\n\n  useEffect(() => {\n    if (!querySearchForm) {\n      return;\n    }\n\n    const asyncWrapper = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getByName(querySearchForm);\n        setMovies(data);\n      } catch (error) {\n        setError('Oops');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n  }, [querySearchForm]);\n\n  return (\n    <div>\n      <h1>Movies</h1>\n      <SearchForm />\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","data","results","map","id","title","getMovieInfo","poster_path","release_date","vote_average","overview","genres","getByName","querySearchForm","console","log","getCastInfo","cast","profile_path","name","character","getReviewsInfo","author","content","Loader","className","css","MoviesList","movies","location","useLocation","to","state","from","SearchForm","useSearchParams","setSearchParams","onSubmit","e","prevenDefault","search","target","query","value","toLowerCase","trim","type","autoComplete","autoFocus","searchParams","useState","setMovies","isLoading","setIsLoading","setError","get","useEffect","asyncWrapper"],"sourceRoot":""}