{"version":3,"file":"static/js/802.e5844495.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oCACkBC,IAFV,uBACvBG,EADuB,EACvBA,KADuB,kBAMxBA,EAAKC,QAAQC,KAAI,YACtB,MAAO,CAAEC,GADgC,EAAhBA,GACZC,MAD4B,EAAZA,MAE9B,KAR8B,2CAAH,qDAWjBC,EAAY,mCAAG,WAAMF,GAAN,yFACHJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BO,EAA9B,oBAA4CN,IADzC,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZM,EAAS,mCAAG,WAAMC,GAAN,yFACAR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BU,IAF/B,uBACfP,EADe,EACfA,KAGRQ,QAAQC,IAAIT,EAAKC,SAJM,kBAKhBD,EAAKC,QAAQC,KAAI,YACtB,MAAO,CAAEC,GADgC,EAAhBA,GACZC,MAD4B,EAAZA,MAE9B,KAPsB,2CAAH,sDAUTM,EAAW,mCAAG,WAAMP,GAAN,yFACFJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BACqBN,IAFnB,uBACjBG,EADiB,EACjBA,KADiB,kBAMlBA,EAAKW,KAAKT,KAAI,YACnB,MAAO,CAAEC,GADqD,EAAxCA,GACTS,aADiD,EAApCA,aACCC,KADmC,EAAtBA,KACPC,UAD6B,EAAhBA,UAE/C,KARwB,2CAAH,sDAWXC,EAAc,mCAAG,WAAMZ,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BACqBN,IAFhB,uBACpBG,EADoB,EACpBA,KAGRQ,QAAQC,IAAIT,EAAKC,SAJW,kBAMrBD,EAAKC,QAAQC,KAAI,YACtB,MAAO,CAAEC,GAD0C,EAA1BA,GACZa,OADsC,EAAtBA,OACRC,QAD8B,EAAdA,QAEtC,KAR2B,2CAAH,qD,gKC3CdC,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,OACE,wBACGA,EAAOjB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIS,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACrC,OACE,2BACE,gBACEM,IAAG,yCAAoCR,GACvCS,IAAKR,KAEP,wBAAKA,KACL,uBAAIC,MANGX,EASZ,KAGN,E,kBCVYmB,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAqBH,EAAAA,EAAAA,UAAS,MAArBI,GAAT,eAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGF,GAAa,GAFhB,UAGsBlB,EAAAA,EAAAA,IAAYa,GAHlC,OAGSvB,EAHT,OAIG0B,EAAU1B,GAJb,gDAMG6B,EAAS,QANZ,yBAQGD,GAAa,GARhB,2EAAD,EAWD,GAAE,CAACL,KAGF,4BACE,SAACL,EAAD,CAAUC,OAAQA,IACjBQ,IAAa,SAACI,EAAA,EAAD,MAGnB,EAED,G,sDClCA,MAAuB,qBAAvB,EAAsD,wB,SCCzCA,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,KAGrB,C","sources":["api/movies-service.js","components/cast/castInfo.jsx","components/cast/cast.jsx","webpack://goit-react-hw-05-movies/./src/components/loader/Loader.module.css?198e","components/loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7b9bc8a9cecedcc4e50de44b7a3d7df5';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  // console.log(data);\n\n  return data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  // console.log(data);\n\n  return data;\n};\n\nexport const getByName = async querySearchForm => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${querySearchForm}`\n  );\n  console.log(data.results);\n  return data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nexport const getCastInfo = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  // console.log(data.cast);\n\n  return data.cast.map(({ id, profile_path, name, character }) => {\n    return { id, profile_path, name, character };\n  });\n};\n\nexport const getReviewsInfo = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  console.log(data.results);\n\n  return data.results.map(({ id, author, content }) => {\n    return { id, author, content };\n  });\n};\n","export const CastInfo = ({ actors }) => {\n  return (\n    <ul>\n      {actors.map(({ id, profile_path, name, character }) => {\n        return (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n              alt={name}\n            />\n            <h3>{name}</h3>\n            <p>{character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { CastInfo } from 'components/cast/castInfo';\nimport { getCastInfo } from 'api/movies-service';\nimport { Loader } from 'components/loader/Loader';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const data = await getCastInfo(movieId);\n        setActors(data);\n      } catch (error) {\n        setError('Oops');\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <div>\n      <CastInfo actors={actors} />\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Loader_wrap__WJ0KW\",\"spinner\":\"Loader_spinner__DydzZ\",\"loader\":\"Loader_loader__Iv4Mh\"};","import css from 'components/loader/Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.wrap}>\n      <div className={css.spinner}></div>\n    </div>\n  );\n};\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","data","results","map","id","title","getMovieInfo","getByName","querySearchForm","console","log","getCastInfo","cast","profile_path","name","character","getReviewsInfo","author","content","CastInfo","actors","src","alt","Cast","movieId","useParams","useState","setActors","isLoading","setIsLoading","setError","useEffect","Loader","className","css"],"sourceRoot":""}